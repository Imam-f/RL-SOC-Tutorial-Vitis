

================================================================
== Vitis HLS Report for 'AdderTree'
================================================================
* Date:           Tue Sep 14 14:04:48 2021

* Version:        2020.1 (Build 2902540 on Wed May 27 20:16:15 MDT 2020)
* Project:        MBKM-Tutorial5
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 5.613 ns |   2.70 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_35_1  |        ?|        ?|         3|          1|          1|     ?|    yes   |
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 5 3 
3 --> 4 
4 --> 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.65>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specshared_ln0 = specshared void @_ssdm_op_SpecShared, i32 %readRep, void"   --->   Operation 6 'specshared' 'specshared_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specstablecontent_ln0 = specstablecontent void @_ssdm_op_SpecStableContent, i32 %readRep, void"   --->   Operation 7 'specstablecontent' 'specstablecontent_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %fifoC224, void @empty_9, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %fifoC123, void @empty_9, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%readRep_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %readRep" [MBKM-Tutorial5/ComputationModule.cpp:27]   --->   Operation 10 'read' 'readRep_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.65ns)   --->   "%br_ln35 = br void" [MBKM-Tutorial5/ComputationModule.cpp:35]   --->   Operation 11 'br' 'br_ln35' <Predicate = true> <Delay = 0.65>

State 2 <SV = 1> <Delay = 1.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%i = phi i31, void %.lr.ph, i31 %add_ln35, void %.split" [MBKM-Tutorial5/ComputationModule.cpp:35]   --->   Operation 12 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln27 = zext i31 %i" [MBKM-Tutorial5/ComputationModule.cpp:27]   --->   Operation 13 'zext' 'zext_ln27' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.99ns)   --->   "%icmp_ln35 = icmp_slt  i32 %zext_ln27, i32 %readRep_read" [MBKM-Tutorial5/ComputationModule.cpp:35]   --->   Operation 14 'icmp' 'icmp_ln35' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (1.00ns)   --->   "%add_ln35 = add i31 %i, i31" [MBKM-Tutorial5/ComputationModule.cpp:35]   --->   Operation 15 'add' 'add_ln35' <Predicate = true> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln35 = br i1 %icmp_ln35, void %._crit_edge.loopexit, void %.split" [MBKM-Tutorial5/ComputationModule.cpp:35]   --->   Operation 16 'br' 'br_ln35' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.61>
ST_3 : Operation 17 [1/1] (1.62ns)   --->   "%p_Val2_s = read i256 @_ssdm_op_Read.ap_fifo.volatile.i256P, i256 %fifoC123" [D:/xilinx/vitis/2020.1/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 17 'read' 'p_Val2_s' <Predicate = (icmp_ln35)> <Delay = 1.62> <CoreInst = "FIFO">   --->   Core 18 'FIFO' <Latency = 0> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 256> <Depth = 16> <FIFO>
ST_3 : Operation 18 [1/1] (0.00ns)   --->   "%trunc_ln674 = trunc i256 %p_Val2_s"   --->   Operation 18 'trunc' 'trunc_ln674' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 19 [1/1] (0.00ns)   --->   "%sext_ln674 = sext i16 %trunc_ln674"   --->   Operation 19 'sext' 'sext_ln674' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%p_Result_s = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 20 'partselect' 'p_Result_s' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i16 %p_Result_s" [MBKM-Tutorial5/ComputationModule.cpp:31]   --->   Operation 21 'sext' 'sext_ln31' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%p_Result_31 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 22 'partselect' 'p_Result_31' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%sext_ln674_1 = sext i16 %p_Result_31"   --->   Operation 23 'sext' 'sext_ln674_1' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%p_Result_32 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 24 'partselect' 'p_Result_32' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%sext_ln674_3 = sext i16 %p_Result_32"   --->   Operation 25 'sext' 'sext_ln674_3' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%p_Result_33 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 26 'partselect' 'p_Result_33' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%sext_ln674_2 = sext i16 %p_Result_33"   --->   Operation 27 'sext' 'sext_ln674_2' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%p_Result_34 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 28 'partselect' 'p_Result_34' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%sext_ln674_5 = sext i16 %p_Result_34"   --->   Operation 29 'sext' 'sext_ln674_5' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%p_Result_35 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 30 'partselect' 'p_Result_35' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%sext_ln674_6 = sext i16 %p_Result_35"   --->   Operation 31 'sext' 'sext_ln674_6' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%p_Result_36 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 32 'partselect' 'p_Result_36' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%sext_ln674_7 = sext i16 %p_Result_36"   --->   Operation 33 'sext' 'sext_ln674_7' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%p_Result_37 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 34 'partselect' 'p_Result_37' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%sext_ln674_4 = sext i16 %p_Result_37"   --->   Operation 35 'sext' 'sext_ln674_4' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%p_Result_38 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 36 'partselect' 'p_Result_38' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%sext_ln674_8 = sext i16 %p_Result_38"   --->   Operation 37 'sext' 'sext_ln674_8' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%p_Result_39 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 38 'partselect' 'p_Result_39' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%sext_ln674_9 = sext i16 %p_Result_39"   --->   Operation 39 'sext' 'sext_ln674_9' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%p_Result_40 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 40 'partselect' 'p_Result_40' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln674_10 = sext i16 %p_Result_40"   --->   Operation 41 'sext' 'sext_ln674_10' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%p_Result_41 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 42 'partselect' 'p_Result_41' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%sext_ln674_11 = sext i16 %p_Result_41"   --->   Operation 43 'sext' 'sext_ln674_11' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%p_Result_42 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 44 'partselect' 'p_Result_42' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%sext_ln674_12 = sext i16 %p_Result_42"   --->   Operation 45 'sext' 'sext_ln674_12' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%p_Result_43 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 46 'partselect' 'p_Result_43' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln674_13 = sext i16 %p_Result_43"   --->   Operation 47 'sext' 'sext_ln674_13' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%p_Result_44 = partselect i16 @_ssdm_op_PartSelect.i16.i256.i32.i32, i256 %p_Val2_s, i32, i32"   --->   Operation 48 'partselect' 'p_Result_44' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%sext_ln32 = sext i16 %p_Result_44" [MBKM-Tutorial5/ComputationModule.cpp:32]   --->   Operation 49 'sext' 'sext_ln32' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.85ns)   --->   "%temp1 = add i17 %sext_ln674, i17 %sext_ln31" [MBKM-Tutorial5/ComputationModule.cpp:43]   --->   Operation 50 'add' 'temp1' <Predicate = (icmp_ln35)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln43 = sext i17 %temp1" [MBKM-Tutorial5/ComputationModule.cpp:43]   --->   Operation 51 'sext' 'sext_ln43' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.85ns)   --->   "%add_ln49 = add i17 %sext_ln674_3, i17 %sext_ln674_1" [MBKM-Tutorial5/ComputationModule.cpp:49]   --->   Operation 52 'add' 'add_ln49' <Predicate = (icmp_ln35)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%sext_ln49 = sext i17 %add_ln49" [MBKM-Tutorial5/ComputationModule.cpp:49]   --->   Operation 53 'sext' 'sext_ln49' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.86ns)   --->   "%temp2 = add i18 %sext_ln43, i18 %sext_ln49" [MBKM-Tutorial5/ComputationModule.cpp:49]   --->   Operation 54 'add' 'temp2' <Predicate = (icmp_ln35)> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln43_1 = sext i18 %temp2" [MBKM-Tutorial5/ComputationModule.cpp:43]   --->   Operation 55 'sext' 'sext_ln43_1' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln55 = add i19 %sext_ln674_2, i19 %sext_ln43_1" [MBKM-Tutorial5/ComputationModule.cpp:55]   --->   Operation 56 'add' 'add_ln55' <Predicate = (icmp_ln35)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 57 [1/1] (0.85ns)   --->   "%add_ln55_1 = add i17 %sext_ln674_7, i17 %sext_ln674_6" [MBKM-Tutorial5/ComputationModule.cpp:55]   --->   Operation 57 'add' 'add_ln55_1' <Predicate = (icmp_ln35)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%sext_ln55 = sext i17 %add_ln55_1" [MBKM-Tutorial5/ComputationModule.cpp:55]   --->   Operation 58 'sext' 'sext_ln55' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.86ns)   --->   "%add_ln55_2 = add i18 %sext_ln674_5, i18 %sext_ln55" [MBKM-Tutorial5/ComputationModule.cpp:55]   --->   Operation 59 'add' 'add_ln55_2' <Predicate = (icmp_ln35)> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%sext_ln55_1 = sext i18 %add_ln55_2" [MBKM-Tutorial5/ComputationModule.cpp:55]   --->   Operation 60 'sext' 'sext_ln55_1' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.69ns) (root node of TernaryAdder)   --->   "%temp3 = add i19 %add_ln55, i19 %sext_ln55_1" [MBKM-Tutorial5/ComputationModule.cpp:55]   --->   Operation 61 'add' 'temp3' <Predicate = (icmp_ln35)> <Delay = 0.69> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%sext_ln43_2 = sext i19 %temp3" [MBKM-Tutorial5/ComputationModule.cpp:43]   --->   Operation 62 'sext' 'sext_ln43_2' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.88ns)   --->   "%add_ln59 = add i20 %sext_ln674_4, i20 %sext_ln43_2" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 63 'add' 'add_ln59' <Predicate = (icmp_ln35)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.85ns)   --->   "%add_ln59_1 = add i17 %sext_ln674_9, i17 %sext_ln674_8" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 64 'add' 'add_ln59_1' <Predicate = (icmp_ln35)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i17 %add_ln59_1" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 65 'sext' 'sext_ln59' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln59_2 = add i20 %add_ln59, i20 %sext_ln59" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 66 'add' 'add_ln59_2' <Predicate = (icmp_ln35)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 67 [1/1] (0.85ns)   --->   "%add_ln59_3 = add i17 %sext_ln674_11, i17 %sext_ln674_10" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 67 'add' 'add_ln59_3' <Predicate = (icmp_ln35)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln59_1 = sext i17 %add_ln59_3" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 68 'sext' 'sext_ln59_1' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.85ns)   --->   "%add_ln59_4 = add i17 %sext_ln32, i17 %sext_ln674_13" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 69 'add' 'add_ln59_4' <Predicate = (icmp_ln35)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%sext_ln59_2 = sext i17 %add_ln59_4" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 70 'sext' 'sext_ln59_2' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.86ns)   --->   "%add_ln59_5 = add i18 %sext_ln674_12, i18 %sext_ln59_2" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 71 'add' 'add_ln59_5' <Predicate = (icmp_ln35)> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%sext_ln59_3 = sext i18 %add_ln59_5" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 72 'sext' 'sext_ln59_3' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.87ns)   --->   "%add_ln59_6 = add i19 %sext_ln59_1, i19 %sext_ln59_3" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 73 'add' 'add_ln59_6' <Predicate = (icmp_ln35)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%sext_ln59_4 = sext i19 %add_ln59_6" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 74 'sext' 'sext_ln59_4' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.69ns) (root node of TernaryAdder)   --->   "%scaC = add i20 %add_ln59_2, i20 %sext_ln59_4" [MBKM-Tutorial5/ComputationModule.cpp:59]   --->   Operation 75 'add' 'scaC' <Predicate = (icmp_ln35)> <Delay = 0.69> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 4 <SV = 3> <Delay = 2.04>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%specpipeline_ln35 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @empty_0" [MBKM-Tutorial5/ComputationModule.cpp:35]   --->   Operation 76 'specpipeline' 'specpipeline_ln35' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%specloopname_ln35 = specloopname void @_ssdm_op_SpecLoopName, void @empty_13" [MBKM-Tutorial5/ComputationModule.cpp:35]   --->   Operation 77 'specloopname' 'specloopname_ln35' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%sext_ln30 = sext i20 %scaC" [MBKM-Tutorial5/ComputationModule.cpp:30]   --->   Operation 78 'sext' 'sext_ln30' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (2.04ns)   --->   "%write_ln167 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P, i32 %fifoC224, i32 %sext_ln30" [D:/xilinx/vitis/2020.1/common/technology/autopilot/hls_stream_39.h:167]   --->   Operation 79 'write' 'write_ln167' <Predicate = (icmp_ln35)> <Delay = 2.04> <CoreInst = "FIFO_SRL">   --->   Core 21 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 2.04> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 16> <FIFO>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 80 'br' 'br_ln0' <Predicate = (icmp_ln35)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%ret_ln64 = ret" [MBKM-Tutorial5/ComputationModule.cpp:64]   --->   Operation 81 'ret' 'ret_ln64' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', MBKM-Tutorial5/ComputationModule.cpp:35) with incoming values : ('add_ln35', MBKM-Tutorial5/ComputationModule.cpp:35) [11]  (0.656 ns)

 <State 2>: 1.01ns
The critical path consists of the following:
	'phi' operation ('i', MBKM-Tutorial5/ComputationModule.cpp:35) with incoming values : ('add_ln35', MBKM-Tutorial5/ComputationModule.cpp:35) [11]  (0 ns)
	'add' operation ('add_ln35', MBKM-Tutorial5/ComputationModule.cpp:35) [14]  (1.01 ns)

 <State 3>: 5.61ns
The critical path consists of the following:
	fifo read on port 'fifoC123' (D:/xilinx/vitis/2020.1/common/technology/autopilot/hls_stream_39.h:145) [19]  (1.62 ns)
	'add' operation ('add_ln55_1', MBKM-Tutorial5/ComputationModule.cpp:55) [59]  (0.853 ns)
	'add' operation ('add_ln55_2', MBKM-Tutorial5/ComputationModule.cpp:55) [61]  (0.863 ns)
	'add' operation ('temp3', MBKM-Tutorial5/ComputationModule.cpp:55) [63]  (0.695 ns)
	'add' operation ('add_ln59', MBKM-Tutorial5/ComputationModule.cpp:59) [65]  (0.884 ns)
	'add' operation ('add_ln59_2', MBKM-Tutorial5/ComputationModule.cpp:59) [68]  (0 ns)
	'add' operation ('scaC', MBKM-Tutorial5/ComputationModule.cpp:59) [77]  (0.698 ns)

 <State 4>: 2.04ns
The critical path consists of the following:
	fifo write on port 'fifoC224' (D:/xilinx/vitis/2020.1/common/technology/autopilot/hls_stream_39.h:167) [79]  (2.04 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
